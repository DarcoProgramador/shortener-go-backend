// Code generated by mockery v2.50.4. DO NOT EDIT.

package controller

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/DarcoProgramador/shortener-go-backend/internal/models"
)

// MockControllerInterface is an autogenerated mock type for the ControllerInterface type
type MockControllerInterface struct {
	mock.Mock
}

type MockControllerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockControllerInterface) EXPECT() *MockControllerInterface_Expecter {
	return &MockControllerInterface_Expecter{mock: &_m.Mock}
}

// CreateShortLink provides a mock function with given fields: _a0, _a1
func (_m *MockControllerInterface) CreateShortLink(_a0 context.Context, _a1 string) (*models.ShortLinkResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for CreateShortLink")
	}

	var r0 *models.ShortLinkResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*models.ShortLinkResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *models.ShortLinkResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ShortLinkResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockControllerInterface_CreateShortLink_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateShortLink'
type MockControllerInterface_CreateShortLink_Call struct {
	*mock.Call
}

// CreateShortLink is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 string
func (_e *MockControllerInterface_Expecter) CreateShortLink(_a0 interface{}, _a1 interface{}) *MockControllerInterface_CreateShortLink_Call {
	return &MockControllerInterface_CreateShortLink_Call{Call: _e.mock.On("CreateShortLink", _a0, _a1)}
}

func (_c *MockControllerInterface_CreateShortLink_Call) Run(run func(_a0 context.Context, _a1 string)) *MockControllerInterface_CreateShortLink_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockControllerInterface_CreateShortLink_Call) Return(_a0 *models.ShortLinkResponse, _a1 error) *MockControllerInterface_CreateShortLink_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockControllerInterface_CreateShortLink_Call) RunAndReturn(run func(context.Context, string) (*models.ShortLinkResponse, error)) *MockControllerInterface_CreateShortLink_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteShortLink provides a mock function with given fields: _a0, _a1
func (_m *MockControllerInterface) DeleteShortLink(_a0 context.Context, _a1 string) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for DeleteShortLink")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockControllerInterface_DeleteShortLink_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteShortLink'
type MockControllerInterface_DeleteShortLink_Call struct {
	*mock.Call
}

// DeleteShortLink is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 string
func (_e *MockControllerInterface_Expecter) DeleteShortLink(_a0 interface{}, _a1 interface{}) *MockControllerInterface_DeleteShortLink_Call {
	return &MockControllerInterface_DeleteShortLink_Call{Call: _e.mock.On("DeleteShortLink", _a0, _a1)}
}

func (_c *MockControllerInterface_DeleteShortLink_Call) Run(run func(_a0 context.Context, _a1 string)) *MockControllerInterface_DeleteShortLink_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockControllerInterface_DeleteShortLink_Call) Return(_a0 error) *MockControllerInterface_DeleteShortLink_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockControllerInterface_DeleteShortLink_Call) RunAndReturn(run func(context.Context, string) error) *MockControllerInterface_DeleteShortLink_Call {
	_c.Call.Return(run)
	return _c
}

// GetOriginalLink provides a mock function with given fields: _a0, _a1
func (_m *MockControllerInterface) GetOriginalLink(_a0 context.Context, _a1 string) (*models.ShortLinkResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetOriginalLink")
	}

	var r0 *models.ShortLinkResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*models.ShortLinkResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *models.ShortLinkResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ShortLinkResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockControllerInterface_GetOriginalLink_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOriginalLink'
type MockControllerInterface_GetOriginalLink_Call struct {
	*mock.Call
}

// GetOriginalLink is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 string
func (_e *MockControllerInterface_Expecter) GetOriginalLink(_a0 interface{}, _a1 interface{}) *MockControllerInterface_GetOriginalLink_Call {
	return &MockControllerInterface_GetOriginalLink_Call{Call: _e.mock.On("GetOriginalLink", _a0, _a1)}
}

func (_c *MockControllerInterface_GetOriginalLink_Call) Run(run func(_a0 context.Context, _a1 string)) *MockControllerInterface_GetOriginalLink_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockControllerInterface_GetOriginalLink_Call) Return(_a0 *models.ShortLinkResponse, _a1 error) *MockControllerInterface_GetOriginalLink_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockControllerInterface_GetOriginalLink_Call) RunAndReturn(run func(context.Context, string) (*models.ShortLinkResponse, error)) *MockControllerInterface_GetOriginalLink_Call {
	_c.Call.Return(run)
	return _c
}

// GetStatShortLink provides a mock function with given fields: _a0, _a1
func (_m *MockControllerInterface) GetStatShortLink(_a0 context.Context, _a1 string) (*models.StatShortLinkResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetStatShortLink")
	}

	var r0 *models.StatShortLinkResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*models.StatShortLinkResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *models.StatShortLinkResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.StatShortLinkResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockControllerInterface_GetStatShortLink_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetStatShortLink'
type MockControllerInterface_GetStatShortLink_Call struct {
	*mock.Call
}

// GetStatShortLink is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 string
func (_e *MockControllerInterface_Expecter) GetStatShortLink(_a0 interface{}, _a1 interface{}) *MockControllerInterface_GetStatShortLink_Call {
	return &MockControllerInterface_GetStatShortLink_Call{Call: _e.mock.On("GetStatShortLink", _a0, _a1)}
}

func (_c *MockControllerInterface_GetStatShortLink_Call) Run(run func(_a0 context.Context, _a1 string)) *MockControllerInterface_GetStatShortLink_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockControllerInterface_GetStatShortLink_Call) Return(_a0 *models.StatShortLinkResponse, _a1 error) *MockControllerInterface_GetStatShortLink_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockControllerInterface_GetStatShortLink_Call) RunAndReturn(run func(context.Context, string) (*models.StatShortLinkResponse, error)) *MockControllerInterface_GetStatShortLink_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateLink provides a mock function with given fields: _a0, _a1, _a2
func (_m *MockControllerInterface) UpdateLink(_a0 context.Context, _a1 string, _a2 string) (*models.ShortLinkResponse, error) {
	ret := _m.Called(_a0, _a1, _a2)

	if len(ret) == 0 {
		panic("no return value specified for UpdateLink")
	}

	var r0 *models.ShortLinkResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) (*models.ShortLinkResponse, error)); ok {
		return rf(_a0, _a1, _a2)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string) *models.ShortLinkResponse); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ShortLinkResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockControllerInterface_UpdateLink_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateLink'
type MockControllerInterface_UpdateLink_Call struct {
	*mock.Call
}

// UpdateLink is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 string
//   - _a2 string
func (_e *MockControllerInterface_Expecter) UpdateLink(_a0 interface{}, _a1 interface{}, _a2 interface{}) *MockControllerInterface_UpdateLink_Call {
	return &MockControllerInterface_UpdateLink_Call{Call: _e.mock.On("UpdateLink", _a0, _a1, _a2)}
}

func (_c *MockControllerInterface_UpdateLink_Call) Run(run func(_a0 context.Context, _a1 string, _a2 string)) *MockControllerInterface_UpdateLink_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *MockControllerInterface_UpdateLink_Call) Return(_a0 *models.ShortLinkResponse, _a1 error) *MockControllerInterface_UpdateLink_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockControllerInterface_UpdateLink_Call) RunAndReturn(run func(context.Context, string, string) (*models.ShortLinkResponse, error)) *MockControllerInterface_UpdateLink_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockControllerInterface creates a new instance of MockControllerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockControllerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockControllerInterface {
	mock := &MockControllerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
